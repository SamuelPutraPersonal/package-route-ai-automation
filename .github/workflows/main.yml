# .github/workflows/main.yml
name: PackageRouteAI Test Automation CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-report:
    runs-on: ubuntu-latest # Use a Linux environment for consistency

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Get your code from the repo

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9" # Or a newer version like '3.10', '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install Pillow # Ensure Pillow is installed

      - name: Set up Java for Allure (required by Allure Command Line)
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      # --- REMOVE THE OLD "Install Allure Command Line" STEP HERE ---
      # --- ADD THE NEW MANUAL DOWNLOAD AND INSTALL STEP BELOW ---

      - name: Download and Install Allure Command Line (Directly) # NEW STEP
        run: |
          ALLURE_VERSION="2.32.0" # You can update this to the latest stable version if needed
          ALLURE_ZIP="allure-${ALLURE_VERSION}.zip"
          ALLURE_URL="https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/${ALLURE_ZIP}"

          echo "Downloading Allure CLI from: $ALLURE_URL"
          wget "$ALLURE_URL" -O "$ALLURE_ZIP" || { echo "Failed to download Allure CLI"; exit 1; }

          echo "Unzipping Allure CLI..."
          unzip "$ALLURE_ZIP" -d allure-cli-temp || { echo "Failed to unzip Allure CLI"; exit 1; }

          # The extracted content will be in allure-cli-temp/allure-2.x.x
          # Move it to a cleaner path
          mv allure-cli-temp/allure-${ALLURE_VERSION} allure-cli || { echo "Failed to move Allure CLI folder"; exit 1; }

          # Add Allure's bin directory to the PATH for subsequent steps
          echo "::add-path::$(pwd)/allure-cli/bin"

          echo "Verifying Allure CLI installation..."
          allure --version || { echo "Allure command not found after installation"; exit 1; }
          echo "Allure CLI installed successfully."

      - name: Create .env file for SUT URL
        run: |
          echo "PRIME_VISION_SUT_API_BASE_URL=http://localhost:5000" >> .env

      - name: Run Pytest tests and generate Allure results
        run: |
          pytest --alluredir=allure-results # Output raw results to 'allure-results' folder

      - name: Generate Allure Report (Manual)
        if: always()
        run: |
          # Use the absolute path to the allure executable
          $(pwd)/allure-cli/bin/allure generate allure-results --clean -o allure-report

      - name: Deploy Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report
          force_orphan: true
